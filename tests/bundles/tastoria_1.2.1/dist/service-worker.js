/* Qwik Service Worker */
const appBundles=[["q-110848e3.js",[18,19]],["q-15260cf4.js",[18,29,30],["8FvSYREmv3k","ziZJtmdAT4o"]],["q-1dbdb87a.js",[18,19,37],["yZ7b1zQICcY"]],["q-22538fb6.js",[18],["rAcjzNUtu4c"]],["q-23ff6344.js",[0,13,18,19,35],["p2XblwHqQHk","pGqtajdeBpU"]],["q-26b20b43.js",[18,19],["wOIPfiQ04l4"]],["q-2a7f46b6.js",[18,19],["8gdLBszqbaM","i1Cv0pYJNR0"]],["q-2bc412d0.js",[18,19],["BUbtvTyvVRE","WmYC5H00wtI"]],["q-348b7376.js",[18,20,30],["ck0159sXB30"]],["q-4a3c427e.js",[18]],["q-6132b32e.js",[18,19],["Rv8c3H0ZJk8"]],["q-64071d24.js",[34]],["q-663033b0.js",[],["DyVc0YBIqQU"]],["q-6973d461.js",[18]],["q-6c2c9009.js",[18,19],["e0ssiDXoeAM"]],["q-713ea9fc.js",[18,20],["3E04a8u6PME"]],["q-79815b83.js",[18,19],["Nk9PlpjQm9Y","p9MSze0ojs4"]],["q-88fedbc7.js",[18]],["q-9157976a.js",[]],["q-9d0aec5c.js",[18]],["q-9e8b795b.js",[18]],["q-a3d908d9.js",[13,18,35],["3dS2GpIdYLw","CfLs6mTcYqk"]],["q-a5b34c92.js",[18,34],["ViycXRQlp0Q"]],["q-a82b19c1.js",[18,19]],["q-b3a47599.js",[18,19],["a8UlZM8gC8w"]],["q-b3a5a245.js",[18]],["q-b4c3d375.js",[18,19],["eBQ0vFsFKsk"]],["q-c0cb3184.js",[18],["A5bZC7WO00A"]],["q-c31a0420.js",[]],["q-c5c4d212.js",[]],["q-d4a08e4d.js",[18]],["q-d7912e1a.js",[]],["q-ddcec355.js",[]],["q-df417458.js",[18,19,35],["5kClkbuJccM"]],["q-e3bd038d.js",[]],["q-e5403bfa.js",[18]],["q-e8c2960a.js",[13,18,19,23,29],["lbb01eDYWeI","ZFmcvTAPqFk"]],["q-f15e4a43.js",[18,19]],["q-f8edba11.js",[18,19],["02wMImzEAbk","fX0bDjeJa0E","RPDJAz33WLA","TxCFOy819ag"]]];
const libraryBundleIds=[38];
const linkBundles=[[/^\/$/,[0,4,28]],[/^\/about\/?$/,[0,4,17,22]],[/^\/login\/?$/,[0,4,23,36]],[/^\/recipes\/?$/,[0,4,37,2]],[/^(?:\/(.*))?\/?$/,[0,4,32]]];
import{v as S,n as H}from"./q-e3bd038d.js";const P="QwikBuild",I=new Set,T=new Map,y=[],j=(n,e)=>e.filter(t=>!n.some(s=>t.endsWith(s[0]))),B=(n,e)=>!!e&&!$(e),$=n=>{const e=n.headers.get("Cache-Control")||"";return e.includes("no-cache")||e.includes("max-age=0")},G=(n,e)=>n.some(t=>e.endsWith("/"+t[0])),Q=(n,e)=>n.find(t=>t[0]===e),x=(n,e)=>e.map(t=>n[t]?n[t][0]:null),V=(n,e)=>e.map(t=>n.get(t)).filter(t=>t!=null),z=n=>{const e=new Map;for(const t of n){const s=t[2];if(s)for(const a of s)e.set(a,t[0])}return e},W=(n,e,t,s)=>new Promise((a,c)=>{const r=s.url,i=t.get(r);if(i)i.push([a,c]);else{const o=u=>{const l=t.get(r);if(l){t.delete(r);for(const[g]of l)g(u.clone())}else a(u.clone())},h=u=>{const l=t.get(r);if(l){t.delete(r);for(const[g,F]of l)F(u)}else c(u)};t.set(r,[[a,c]]),n.match(r).then(u=>{if(B(s,u))o(u);else return e(s).then(async l=>{l.ok&&await n.put(r,l.clone()),o(l)})}).catch(u=>n.match(r).then(l=>{l?o(l):h(u)}))}}),C=(n,e,t,s,a,c=!1)=>{const r=()=>{for(;y.length>0&&T.size<6;){const o=y.shift(),h=new Request(o);I.has(o)?r():(I.add(o),W(e,t,T,h).finally(r))}},i=o=>{try{const h=Q(n,o);if(h){const u=x(n,h[1]),l=new URL(o,s).href,g=y.indexOf(l);g>-1?c&&(y.splice(g,1),y.unshift(l)):c?y.unshift(l):y.push(l),u.forEach(i)}}catch(h){console.error(h)}};Array.isArray(a)&&a.forEach(i),r()},J=(n,e,t,s,a,c,r)=>{try{C(n,s,a,c,x(n,e))}catch(i){console.error(i)}for(const i of r)try{for(const o of t){const[h,u]=o;if(h.test(i)){C(n,s,a,c,x(n,u));break}}}catch(o){console.error(o)}},X=(n,e,t,s)=>{try{const a=s.href.split("/"),c=a[a.length-1];a[a.length-1]="";const r=new URL(a.join("/"));C(n,e,t,r,[c],!0)}catch(a){console.error(a)}},Y=(n,e,t,s)=>{const a=n.fetch.bind(n),c=z(e);n.addEventListener("fetch",r=>{const i=r.request;if(i.method==="GET"){const o=new URL(i.url);G(e,o.pathname)&&r.respondWith(n.caches.open(P).then(h=>(X(e,h,a,o),W(h,a,T,i))))}}),n.addEventListener("message",async({data:r})=>{if(r.type==="qprefetch"&&typeof r.base=="string"){const i=await n.caches.open(P),o=new URL(r.base,n.origin);Array.isArray(r.links)&&J(e,t,s,i,a,o,r.links),Array.isArray(r.bundles)&&C(e,i,a,o,r.bundles),Array.isArray(r.symbols)&&C(e,i,a,o,V(c,r.symbols))}}),n.addEventListener("activate",()=>{(async()=>{try{const r=await n.caches.open(P),o=(await r.keys()).map(u=>u.url),h=j(e,o);await Promise.all(h.map(u=>r.delete(u)))}catch(r){console.error(r)}})()})},Z=()=>{typeof self<"u"&&typeof appBundles<"u"&&Y(self,appBundles,libraryBundleIds,linkBundles)};try{self["workbox:core:7.0.0"]&&_()}catch{}const ee=(n,...e)=>{let t=n;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},te=ee;class f extends Error{constructor(e,t){const s=te(e,t);super(s),this.name=e,this.details=t}}const d={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},v=n=>[d.prefix,n,d.suffix].filter(e=>e&&e.length>0).join("-"),se=n=>{for(const e of Object.keys(d))n(e)},k={updateDetails:n=>{se(e=>{typeof n[e]=="string"&&(d[e]=n[e])})},getGoogleAnalyticsName:n=>n||v(d.googleAnalytics),getPrecacheName:n=>n||v(d.precache),getPrefix:()=>d.prefix,getRuntimeName:n=>n||v(d.runtime),getSuffix:()=>d.suffix};function O(n,e){const t=e();return n.waitUntil(t),t}try{self["workbox:precaching:7.0.0"]&&_()}catch{}const ne="__WB_REVISION__";function ae(n){if(!n)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(typeof n=="string"){const c=new URL(n,location.href);return{cacheKey:c.href,url:c.href}}const{revision:e,url:t}=n;if(!t)throw new f("add-to-cache-list-unexpected-type",{entry:n});if(!e){const c=new URL(t,location.href);return{cacheKey:c.href,url:c.href}}const s=new URL(t,location.href),a=new URL(t,location.href);return s.searchParams.set(ne,e),{cacheKey:s.href,url:a.href}}class re{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const a=t.originalRequest.url;s?this.notUpdatedURLs.push(a):this.updatedURLs.push(a)}return s}}}class ce{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:s})=>{const a=(s==null?void 0:s.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return a?new Request(a,{headers:t.headers}):t},this._precacheController=e}}let m;function ie(){if(m===void 0){const n=new Response("");if("body"in n)try{new Response(n.body),m=!0}catch{m=!1}m=!1}return m}async function oe(n,e){let t=null;if(n.url&&(t=new URL(n.url).origin),t!==self.location.origin)throw new f("cross-origin-copy-response",{origin:t});const s=n.clone(),a={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},c=e?e(a):a,r=ie()?s.body:await s.blob();return new Response(r,c)}const le=n=>new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),"");function M(n,e){const t=new URL(n);for(const s of e)t.searchParams.delete(s);return t.href}async function he(n,e,t,s){const a=M(e.url,t);if(e.url===a)return n.match(e,s);const c=Object.assign(Object.assign({},s),{ignoreSearch:!0}),r=await n.keys(e,c);for(const i of r){const o=M(i.url,t);if(a===o)return n.match(i,s)}}class ue{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const fe=new Set;async function de(){for(const n of fe)await n()}function ge(n){return new Promise(e=>setTimeout(e,n))}try{self["workbox:strategies:7.0.0"]&&_()}catch{}function U(n){return typeof n=="string"?new Request(n):n}class pe{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new ue,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let s=U(e);if(s.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const r=await t.preloadResponse;if(r)return r}const a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(const r of this.iterateCallbacks("requestWillFetch"))s=await r({request:s.clone(),event:t})}catch(r){if(r instanceof Error)throw new f("plugin-error-request-will-fetch",{thrownErrorMessage:r.message})}const c=s.clone();try{let r;r=await fetch(s,s.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const i of this.iterateCallbacks("fetchDidSucceed"))r=await i({event:t,request:c,response:r});return r}catch(r){throw a&&await this.runCallbacks("fetchDidFail",{error:r,event:t,originalRequest:a.clone(),request:c.clone()}),r}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=U(e);let s;const{cacheName:a,matchOptions:c}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},c),{cacheName:a});s=await caches.match(r,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await o({cacheName:a,matchOptions:c,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,t){const s=U(e);await ge(0);const a=await this.getCacheKey(s,"write");if(!t)throw new f("cache-put-with-no-response",{url:le(a.url)});const c=await this._ensureResponseSafeToCache(t);if(!c)return!1;const{cacheName:r,matchOptions:i}=this._strategy,o=await self.caches.open(r),h=this.hasCallback("cacheDidUpdate"),u=h?await he(o,a.clone(),["__WB_REVISION__"],i):null;try{await o.put(a,h?c.clone():c)}catch(l){if(l instanceof Error)throw l.name==="QuotaExceededError"&&await de(),l}for(const l of this.iterateCallbacks("cacheDidUpdate"))await l({cacheName:r,oldResponse:u,newResponse:c.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const c of this.iterateCallbacks("cacheKeyWillBeUsed"))a=U(await c({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const s=this._pluginStateMap.get(t);yield c=>{const r=Object.assign(Object.assign({},c),{state:s});return t[e](r)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const a of this.iterateCallbacks("cacheWillUpdate"))if(t=await a({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&t.status!==200&&(t=void 0),t}}class q{constructor(e={}){this.cacheName=k.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s=typeof e.request=="string"?new Request(e.request):e.request,a="params"in e?e.params:void 0,c=new pe(this,{event:t,request:s,params:a}),r=this._getResponse(c,s,t),i=this._awaitComplete(r,c,s,t);return[r,i]}async _getResponse(e,t,s){await e.runCallbacks("handlerWillStart",{event:s,request:t});let a;try{if(a=await this._handle(t,e),!a||a.type==="error")throw new f("no-response",{url:t.url})}catch(c){if(c instanceof Error){for(const r of e.iterateCallbacks("handlerDidError"))if(a=await r({error:c,event:s,request:t}),a)break}if(!a)throw c}for(const c of e.iterateCallbacks("handlerWillRespond"))a=await c({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let c,r;try{c=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:c}),await t.doneWaiting()}catch(i){i instanceof Error&&(r=i)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:c,error:r}),t.destroy(),r)throw r}}class p extends q{constructor(e={}){e.cacheName=k.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(p.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let s;const a=t.params||{};if(this._fallbackToNetwork){const c=a.integrity,r=e.integrity,i=!r||r===c;s=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?r||c:void 0})),c&&i&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,s.clone()))}else throw new f("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return s}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const s=await t.fetch(e);if(!await t.cachePut(e,s.clone()))throw new f("bad-precaching-response",{url:e.url,status:s.status});return s}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==p.copyRedirectedCacheableResponsesPlugin&&(a===p.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);t===0?this.plugins.push(p.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}p.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:n}){return!n||n.status>=400?null:n}};p.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:n}){return n.redirected?await oe(n):n}};class ye{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new p({cacheName:k.getPrecacheName(e),plugins:[...t,new ce({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const s of e){typeof s=="string"?t.push(s):s&&s.revision===void 0&&t.push(s.url);const{cacheKey:a,url:c}=ae(s),r=typeof s!="string"&&s.revision?"reload":"default";if(this._urlsToCacheKeys.has(c)&&this._urlsToCacheKeys.get(c)!==a)throw new f("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(c),secondEntry:a});if(typeof s!="string"&&s.integrity){if(this._cacheKeysToIntegrities.has(a)&&this._cacheKeysToIntegrities.get(a)!==s.integrity)throw new f("add-to-cache-list-conflicting-integrities",{url:c});this._cacheKeysToIntegrities.set(a,s.integrity)}if(this._urlsToCacheKeys.set(c,a),this._urlsToCacheModes.set(c,r),t.length>0){const i=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(i)}}}install(e){return O(e,async()=>{const t=new re;this.strategy.plugins.push(t);for(const[c,r]of this._urlsToCacheKeys){const i=this._cacheKeysToIntegrities.get(r),o=this._urlsToCacheModes.get(c),h=new Request(c,{integrity:i,cache:o,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:h,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}})}activate(e){return O(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),s=await t.keys(),a=new Set(this._urlsToCacheKeys.values()),c=[];for(const r of s)a.has(r.url)||(await t.delete(r),c.push(r.url));return{deletedURLs:c}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new f("non-precached-url",{url:e});return s=>(s.request=new Request(e),s.params=Object.assign({cacheKey:t},s.params),this.strategy.handle(s))}}let K;const A=()=>(K||(K=new ye),K);try{self["workbox:routing:7.0.0"]&&_()}catch{}const D="GET",L=n=>n&&typeof n=="object"?n:{handle:n};class w{constructor(e,t,s=D){this.handler=L(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=L(e)}}class we extends w{constructor(e,t,s){const a=({url:c})=>{const r=e.exec(c.href);if(r&&!(c.origin!==location.origin&&r.index!==0))return r.slice(1)};super(a,t,s)}}class me{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(a=>{typeof a=="string"&&(a=[a]);const c=new Request(...a);return this.handleRequest({request:c,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:c,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let i=r&&r.handler;const o=e.method;if(!i&&this._defaultHandlerMap.has(o)&&(i=this._defaultHandlerMap.get(o)),!i)return;let h;try{h=i.handle({url:s,request:e,event:t,params:c})}catch(l){h=Promise.reject(l)}const u=r&&r.catchHandler;return h instanceof Promise&&(this._catchHandler||u)&&(h=h.catch(async l=>{if(u)try{return await u.handle({url:s,request:e,event:t,params:c})}catch(g){g instanceof Error&&(l=g)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw l})),h}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const c=this._routes.get(s.method)||[];for(const r of c){let i;const o=r.match({url:e,sameOrigin:t,request:s,event:a});if(o)return i=o,(Array.isArray(i)&&i.length===0||o.constructor===Object&&Object.keys(o).length===0||typeof o=="boolean")&&(i=void 0),{route:r,params:i}}return{}}setDefaultHandler(e,t=D){this._defaultHandlerMap.set(t,L(e))}setCatchHandler(e){this._catchHandler=L(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new f("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new f("unregister-route-route-not-registered")}}let R;const Re=()=>(R||(R=new me,R.addFetchListener(),R.addCacheListener()),R);function N(n,e,t){let s;if(typeof n=="string"){const c=new URL(n,location.href),r=({url:i})=>i.href===c.href;s=new w(r,e,t)}else if(n instanceof RegExp)s=new we(n,e,t);else if(typeof n=="function")s=new w(n,e,t);else if(n instanceof w)s=n;else throw new f("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return Re().registerRoute(s),s}function Ce(n,e=[]){for(const t of[...n.searchParams.keys()])e.some(s=>s.test(t))&&n.searchParams.delete(t);return n}function*_e(n,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:a}={}){const c=new URL(n,location.href);c.hash="",yield c.href;const r=Ce(c,e);if(yield r.href,t&&r.pathname.endsWith("/")){const i=new URL(r.href);i.pathname+=t,yield i.href}if(s){const i=new URL(r.href);i.pathname+=".html",yield i.href}if(a){const i=a({url:c});for(const o of i)yield o.href}}class be extends w{constructor(e,t){const s=({request:a})=>{const c=e.getURLsToCacheKeys();for(const r of _e(a.url,t)){const i=c.get(r);if(i){const o=e.getIntegrityForCacheKey(i);return{cacheKey:i,integrity:o}}}};super(s,e.strategy)}}function Ue(n){const e=A(),t=new be(e,n);N(t)}const Le="-precache-",ke=async(n,e=Le)=>{const s=(await self.caches.keys()).filter(a=>a.includes(e)&&a.includes(self.registration.scope)&&a!==n);return await Promise.all(s.map(a=>self.caches.delete(a))),s};function Pe(){self.addEventListener("activate",n=>{const e=k.getPrecacheName();n.waitUntil(ke(e).then(t=>{}))})}function ve(n){return A().createHandlerBoundToURL(n)}function Ke(n){A().precache(n)}function Te(n,e){Ke(n),Ue(e)}class xe extends w{constructor(e,{allowlist:t=[/./],denylist:s=[]}={}){super(a=>this._match(a),e),this._allowlist=t,this._denylist=s}_match({url:e,request:t}){if(t&&t.mode!=="navigate")return!1;const s=e.pathname+e.search;for(const a of this._denylist)if(a.test(s))return!1;return!!this._allowlist.some(a=>a.test(s))}}class Ne extends q{async _handle(e,t){let s=await t.cacheMatch(e),a;if(!s)try{s=await t.fetchAndCachePut(e)}catch(c){c instanceof Error&&(a=c)}if(!s)throw new f("no-response",{url:e.url,error:a});return s}}const E=`v.${S}`,b=`${H} ${E}`;console.log(b,"service worker");addEventListener("install",()=>{self.skipWaiting(),console.log(b,"installed")});addEventListener("activate",()=>{self.clients.claim(),console.log(b,"activated")});const Ee=["/manifest.json",...["128","144","152","192","256"].map(n=>`images/logo_${n}.png`),"fonts/PlayfairDisplay-ExtraBoldItalic.ttf"];try{Te([{url:"/",revision:E},...Ee.map(n=>({url:n,revision:E}))]),N(new xe(ve("/"))),N(({request:n})=>n.destination==="image",new Ne({cacheName:"image"})),Pe(),Z(),console.log(b,"setup")}catch(n){console.error(b,n)}
